{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [digits, setDigits] = useState(0);\n  const [maths, setMaths] = useState();\n  const numbers = [{\n    id: \"num7\",\n    value: 7,\n    numWord: \"seven number\"\n  }, {\n    id: \"num8\",\n    value: 8,\n    numWord: \"eight number\"\n  }, {\n    id: \"num9\",\n    value: 9,\n    numWord: \"nine number\"\n  }, {\n    id: \"num4\",\n    value: 4,\n    numWord: \"four number\"\n  }, {\n    id: \"num5\",\n    value: 5,\n    numWord: \"five number\"\n  }, {\n    id: \"num6\",\n    value: 6,\n    numWord: \"six number\"\n  }, {\n    id: \"num3\",\n    value: 3,\n    numWord: \"three number\"\n  }, {\n    id: \"num2\",\n    value: 2,\n    numWord: \"two number\"\n  }, {\n    id: \"num1\",\n    value: 1,\n    numWord: \"one number\"\n  }, {\n    id: \"num0\",\n    value: 0,\n    numWord: \"zero number\"\n  }];\n  const makeButtons = numbers.map(number => /*#__PURE__*/_jsxDEV(Button, {\n    number: number.value,\n    value: number.value,\n    className: number.numWord,\n    click: handleNumberClick\n  }, number.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this));\n  const mathButtons = [{\n    id: \"xx\",\n    value: \"x\",\n    mathWord: \"multiply\"\n  }, {\n    id: \"++\",\n    value: \"+\",\n    mathWord: \"add\"\n  }, {\n    id: \"--\",\n    value: \"-\",\n    mathWord: \"subtract\"\n  }, {\n    id: \"//\",\n    value: \"/\",\n    mathWord: \"divide\"\n  }];\n  const makeMath = mathButtons.map(mathButton => /*#__PURE__*/_jsxDEV(Button, {\n    value: mathButton.value,\n    number: mathButton.value,\n    click: handleMathClick\n  }, mathButton.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this));\n\n  function handleNumberClick(event) {\n    const newDigit = event.target.value;\n    setDigits(prevDigit => ({ ...prevDigit,\n      newDigit\n    }));\n    console.log(digits);\n  }\n\n  function handleMathClick(event) {\n    const newMath = event.target.value;\n    setMaths(prevMath => ({ ...prevMath,\n      newMath\n    }));\n    console.log(maths);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      value: digits,\n      children: digits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), makeButtons, makeMath, /*#__PURE__*/_jsxDEV(Button, {\n      number: \"=\",\n      click: makeTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"x04tviiYsgpZ6Di8zedgIKcNlx4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gaylemcclure/Dev/calculator/src/App.js"],"names":["React","useState","Button","App","digits","setDigits","maths","setMaths","numbers","id","value","numWord","makeButtons","map","number","handleNumberClick","mathButtons","mathWord","makeMath","mathButton","handleMathClick","event","newDigit","target","prevDigit","console","log","newMath","prevMath","makeTotal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AAEA,QAAMO,OAAO,GAAG,CAChB;AACEC,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADgB,EAMhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANgB,EAWhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXgB,EAgBhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAhBgB,EAqBhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GArBgB,EA0BhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GA1BgB,EA+BhB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GA/BgB,EAoChB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GApCgB,EAyChB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAzCgB,EA8ChB;AACEF,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,KAAK,EAAE,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX,GA9CgB,CAAhB;AAoDA,QAAMC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,iBACpC,QAAC,MAAD;AAAwB,IAAA,MAAM,EAAEA,MAAM,CAACJ,KAAvC;AAA8C,IAAA,KAAK,EAAEI,MAAM,CAACJ,KAA5D;AAAmE,IAAA,SAAS,EAAEI,MAAM,CAACH,OAArF;AAA8F,IAAA,KAAK,EAAEI;AAArG,KAAaD,MAAM,CAACL,EAApB;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAIA,QAAMO,WAAW,GAAG,CAClB;AACEP,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEO,IAAAA,QAAQ,EAAE;AAHZ,GADkB,EAMlB;AACER,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEO,IAAAA,QAAQ,EAAE;AAHZ,GANkB,EAWlB;AACER,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEO,IAAAA,QAAQ,EAAE;AAHZ,GAXkB,EAgBlB;AACER,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEO,IAAAA,QAAQ,EAAE;AAHZ,GAhBkB,CAApB;AAuBA,QAAMC,QAAQ,GAAGF,WAAW,CAACH,GAAZ,CAAgBM,UAAU,iBACzC,QAAC,MAAD;AAA4B,IAAA,KAAK,EAAEA,UAAU,CAACT,KAA9C;AAAqD,IAAA,MAAM,EAAES,UAAU,CAACT,KAAxE;AAA+E,IAAA,KAAK,EAAEU;AAAtF,KAAaD,UAAU,CAACV,EAAxB;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;;AAIA,WAASM,iBAAT,CAA2BM,KAA3B,EAAkC;AAChC,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAab,KAA9B;AACAL,IAAAA,SAAS,CAACmB,SAAS,KAAK,EACtB,GAAGA,SADmB;AAEtBF,MAAAA;AAFsB,KAAL,CAAV,CAAT;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAZ;AACD;;AAED,WAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,UAAMM,OAAO,GAAGN,KAAK,CAACE,MAAN,CAAab,KAA7B;AACCH,IAAAA,QAAQ,CAACqB,QAAQ,KAAK,EACpB,GAAGA,QADiB;AAEpBD,MAAAA;AAFoB,KAAL,CAAT,CAAR;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAEF,MAA9B;AAAA,gBAAuCA;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGQ,WAFH,EAGGM,QAHH,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,GAAf;AAAmB,MAAA,KAAK,EAAEW;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlHQ1B,G;;KAAAA,G;AAoHT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Button from './components/Button';\n\nfunction App() {\n\n  const [digits, setDigits] = useState(0);\n  const [maths, setMaths] = useState();\n\n  const numbers = [\n  {\n    id: \"num7\",\n    value: 7, \n    numWord: \"seven number\",\n  },\n  { \n    id: \"num8\",\n    value: 8, \n    numWord: \"eight number\"\n  },\n  { \n    id: \"num9\",\n    value: 9, \n    numWord: \"nine number\"\n  },\n  { \n    id: \"num4\",\n    value: 4, \n    numWord: \"four number\"\n  },\n  { \n    id: \"num5\",\n    value: 5, \n    numWord: \"five number\"\n  },\n  { \n    id: \"num6\",\n    value: 6, \n    numWord: \"six number\"\n  },\n  { \n    id: \"num3\",\n    value: 3, \n    numWord: \"three number\"\n  },\n  { \n    id: \"num2\",\n    value: 2, \n    numWord: \"two number\"\n  },\n  { \n    id: \"num1\",\n    value: 1, \n    numWord: \"one number\"\n  },\n  { \n    id: \"num0\",\n    value: 0,\n    numWord: \"zero number\"\n  }\n];\n  const makeButtons = numbers.map(number => (\n    <Button key={number.id} number={number.value} value={number.value} className={number.numWord} click={handleNumberClick}/>\n  ))\n\n  const mathButtons = [\n    {\n      id: \"xx\",\n      value: \"x\",\n      mathWord: \"multiply\"\n    },\n    {\n      id: \"++\",\n      value: \"+\",\n      mathWord: \"add\"\n    },\n    {\n      id: \"--\",\n      value: \"-\",\n      mathWord: \"subtract\"\n    },\n    {\n      id: \"//\",\n      value: \"/\",\n      mathWord: \"divide\"\n    }\n  ];\n\n  const makeMath = mathButtons.map(mathButton => (\n    <Button key={mathButton.id} value={mathButton.value} number={mathButton.value} click={handleMathClick} />\n  ))\n\n  function handleNumberClick(event) {\n    const newDigit = event.target.value;\n    setDigits(prevDigit => ({\n      ...prevDigit,\n      newDigit\n    }))\n    console.log(digits)\n  }\n\n  function handleMathClick(event) {\n   const newMath = event.target.value\n    setMaths(prevMath => ({\n      ...prevMath,\n      newMath\n    }))\n    console.log(maths)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"total\" value={digits}>{digits}</div>\n      {makeButtons}\n      {makeMath}\n      <Button number=\"=\" click={makeTotal} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}